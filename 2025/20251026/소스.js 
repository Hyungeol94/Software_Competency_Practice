//https://leetcode.com/problems/simple-bank-system/?envType=daily-question&envId=2025-10-26
//2043. Simple Bank System

/**
 * @param {number[]} balance
 */
var Bank = function(balance) {
    this.balance = balance
    this.n = balance.length
};

/** 
 * @param {number} account1 
 * @param {number} account2 
 * @param {number} money
 * @return {boolean}
 */

Bank.prototype.isValid = function(account) {
    if (account > this.n || account <= 0) { 
        return false
    }
    return true
}

Bank.prototype.transfer = function(account1, account2, money) {
    if (!this.isValid(account1) || !this.isValid(account2)) {
        return false
    }
    if (this.balance[account1-1] < money) { 
        return false
    }

    this.balance[account1-1] -= money
    this.balance[account2-1] += money
    return true
};

/** 
 * @param {number} account 
 * @param {number} money
 * @return {boolean}
 */
Bank.prototype.deposit = function(account, money) {
    if (!this.isValid(account)) { 
        return false
    }
    this.balance[account-1] += money
    return true
};

/** 
 * @param {number} account 
 * @param {number} money
 * @return {boolean}
 */
Bank.prototype.withdraw = function(account, money) {
    if (!this.isValid(account)) { 
        return false
    }
    if (this.balance[account-1] < money){ 
        return false
    }
    this.balance[account-1] -= money
    return true
};

/** 
 * Your Bank object will be instantiated and called as such:
 * var obj = new Bank(balance)
 * var param_1 = obj.transfer(account1,account2,money)
 * var param_2 = obj.deposit(account,money)
 * var param_3 = obj.withdraw(account,money)
 */